//*******************************************
//
// Criado por Pedro Bou√ßa Nova

#ifndef MAPVIZ_PLUGINS_BESTPOS_PLUGIN_H_
#define MAPVIZ_PLUGINS_BESTPOS_PLUGIN_H_

// Include mapviz_plugin.h first to ensure GL deps are included in the right order
#include <mapviz/mapviz_plugin.h>

#include <mapviz/map_canvas.h>
#include <mapviz_plugins/point_drawing_plugin.h>

// C++ standard libraries
#include <list>
#include <string>
#include <vector>

// QT libraries
#include <QGLWidget>
#include <QObject>
#include <QWidget>

// ROS libraries
#include <gps_common/GPSFix.h>
#include <ros/ros.h>
#include <tf/transform_datatypes.h>

#include <novatel_gps_msgs/NovatelPosition.h>

#include <novatel_gps_msgs/Gpgga.h>
#include <novatel_gps_msgs/Gpgsa.h>
#include <novatel_gps_msgs/Gprmc.h>
#include <novatel_gps_msgs/Inspva.h>
#include <novatel_gps_msgs/Insstdev.h>
#include <novatel_gps_msgs/NovatelCorrectedImuData.h>
#include <novatel_gps_msgs/NovatelGNSSPosition.h>
#include <novatel_gps_msgs/NovatelPosition.h>
#include <novatel_gps_msgs/NovatelVelocity.h>
#include <novatel_gps_msgs/Range.h>
#include <novatel_gps_msgs/Time.h>
#include <novatel_gps_msgs/Trackstat.h>
#include <swri_transform_util/local_xy_util.h>

// QT autogenerated files
#include "ui_bestpos_config.h"

namespace mapviz_plugins
{
class BestposPlugin : public mapviz_plugins::PointDrawingPlugin
{
  Q_OBJECT

public:
  BestposPlugin();
  virtual ~BestposPlugin();

  bool Initialize(QGLWidget* canvas);
  void Shutdown()
  {
  }

  void Draw(double x, double y, double scale);

  void LoadConfig(const YAML::Node& node, const std::string& path);
  void SaveConfig(YAML::Emitter& emitter, const std::string& path);

  QWidget* GetConfigWidget(QWidget* parent);

protected:
  void PrintError(const std::string& message);
  void PrintInfo(const std::string& message);
  void PrintWarning(const std::string& message);

protected Q_SLOTS:
  void SelectTopic();
  void TopicEdited();

private:
  Ui::bestpos_config ui_;
  QWidget* config_widget_;

  std::string topic_;
  ros::NodeHandle nh;
  ros::Subscriber bestpos_sub_;
  ros::Subscriber inspva_sub_;
  bool has_message_;
  StampedPoint stamped_point;
  swri_transform_util::LocalXyWgs84Util local_xy_util_;

  void BestposCallback(const novatel_gps_msgs::NovatelPositionPtr& bestpos);
  void InspvaCallback(const novatel_gps_msgs::InspvaPtr& imu_inspva);
};
}

#endif  // MAPVIZ_PLUGINS_BESTPOS_PLUGIN_H_
